# -*- Python -*-

import platform

import lit.formats

import os

class ExecOnlyFormat(lit.formats.ShTest):
    def getTestsInDirectory(self, testSuite, path_in_suite, litConfig, localConfig):
        cur_path = os.path.dirname(__file__)
        tests = list()
        # FIXME: Find the tests we put in the ExecOnly folder. This currently
        # fails with some sort of obscure error in pickle:
        #  _pickle.PicklingError: Can't pickle <class
        #   'lit.TestingConfig.ExecOnlyFormat'>: attribute lookup ExecOnlyFormat
        #   on lit.TestingConfig failed
        #
        #for t in super().getTestsInDirectory(testSuite, path_in_suite, litConfig, localConfig):
        #    tests.append(t)

        base = os.path.abspath(os.path.join(cur_path, os.pardir))
        tests.extend(lit.discovery.find_tests_for_inputs(lit_config, [base]))
        for test in tests :
            # Ideally, just 'true', instead of 'xargs -0 true', should work as
            # well.  However, due to some lit-specific issue piping to true from
            # Clang always returns an error.
            test.config.substitutions.insert(0, ('%filecheck', 'xargs -0 true '))
            # FIXME: We run there the tests twice but it seems there is nothing
            # else we could do.
            test.config.name = "clad Execution-Only"
            yield test

# We exclude the `ExecOnly` folder from the main configuration so that here we
# can add a custom formatter that re-runs the existing tests by ignoring the
# produced output comparisons but checks only the final excution result.
config.test_format = ExecOnlyFormat()
